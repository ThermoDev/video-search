{"version":3,"sources":["components/SearchBar.js","components/PlayerHelper.js","components/VideoPlayer.js","components/VideoItem.js","components/VideoList.js","App.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","style","fontSize","type","value","onChange","e","setState","target","placeholder","React","Component","PlayerHelper","width","height","content","VideoPlayer","hasError","fontWeight","error","code","message","video","snippet","title","description","src","id","videoId","frameBorder","allowFullScreen","VideoItem","thumbnails","videoItemButtonClassName","selectedVideo","onMouseUp","onVideoSelect","padding","medium","url","alt","paddingLeft","VideoList","Titles","videos","map","key","YOUTUBE_API_KEY","process","toString","App","onSearchSubmit","a","axios","get","params","q","part","response","data","pageInfo","totalResults","console","log","items","paddingTop","display","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0f4b545.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchBar extends React.Component {\r\n    state = { term: '' };\r\n\r\n    // Update the term in state on form submit\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state.term);\r\n    };\r\n\r\n    // Renders the Search Bar\r\n    render() {\r\n        return (\r\n            <div className=\"ui segment\">\r\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n                    <div className=\"ui field\">\r\n                        <label style={{ fontSize: 'medium' }}>\r\n                            Search for a video\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.term}\r\n                            onChange={(e) =>\r\n                                this.setState({ term: e.target.value })\r\n                            }\r\n                            placeholder=\"Search...\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nconst PlayerHelper = (props) => {\r\n    return (\r\n        <div\r\n            className=\"ui stackable doubling two column\"\r\n            style={{ width: '-webkit-fill-available' }}\r\n        >\r\n            <div className=\"ui segment column\" style={{ height: '20em' }}>\r\n                <div className=\"ui active inverted dimmer\">{props.content}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlayerHelper;\r\n","import React from 'react';\r\nimport './VideoPlayer.css';\r\nimport PlayerHelper from './PlayerHelper';\r\nconst embedUrl = 'https://www.youtube.com/embed/';\r\n\r\nconst VideoPlayer = (props) => {\r\n    // Initial Error Handling\r\n    if (props.hasError) {\r\n        const content = (\r\n            <div className=\"ui\">\r\n                {' '}\r\n                <p style={{ fontSize: 'large', fontWeight: '700' }}>\r\n                    Error: {props.error.code}{' '}\r\n                </p>\r\n                <p style={{ fontSize: 'medium' }}>{props.error.message}</p>\r\n            </div>\r\n        );\r\n        return <PlayerHelper content={content} />;\r\n    }\r\n    if (props.video <= 0) {\r\n        const content = (\r\n            <div\r\n                className=\"ui text loader\"\r\n                style={{ fontSize: 'large', fontWeight: '700' }}\r\n            >\r\n                Awaiting Input...\r\n            </div>\r\n        );\r\n        return <PlayerHelper content={content} />;\r\n    }\r\n\r\n    // Render the video player if no errors encountered\r\n    const { title, description } = props.video.snippet;\r\n    return (\r\n        <div className=\"ui stackable doubling two column\">\r\n            <div className=\"column grid video-container\">\r\n                <iframe\r\n                    src={embedUrl + props.video.id.videoId}\r\n                    title={title}\r\n                    frameBorder=\"0\"\r\n                    allowFullScreen\r\n                    className=\"video column\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"ui segment column\">\r\n                <h3>{title}</h3>\r\n                <p>{description}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","import React from 'react';\r\n\r\nclass VideoItem extends React.Component {\r\n    // Renders a single video item\r\n    render() {\r\n        const { thumbnails, description, title } = this.props.video.snippet;\r\n        let videoItemButtonClassName = \"video-item-button\";\r\n\r\n        if (this.props.selectedVideo != null)\r\n            if (this.props.selectedVideo.id.videoId === this.props.video.id.videoId)\r\n                videoItemButtonClassName += \" selected\"\r\n\r\n        return (\r\n            <div\r\n                className=\"item\"\r\n                onMouseUp={() => this.props.onVideoSelect(this.props.video)}\r\n                style={{ padding: '5px' }}\r\n            >\r\n                <div className={videoItemButtonClassName}>\r\n                    <img\r\n                        className=\"ui small image\"\r\n                        src={thumbnails.medium.url}\r\n                        alt={description}\r\n                    />\r\n                    <div\r\n                        className=\"content header\"\r\n                        style={{ paddingLeft: '5px' }}\r\n                    >\r\n                        {title}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VideoItem;\r\n","import './VideoList.css';\r\nimport React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nclass VideoList extends React.Component {\r\n    // Renders the list of videos, using VideoItem as a child component for each video.\r\n    render() {\r\n        const Titles = this.props.videos.map((video) => {\r\n            return (\r\n                <VideoItem\r\n                    key={video.id.videoId}\r\n                    video={video}\r\n                    selectedVideo={this.props.selectedVideo}\r\n                    onVideoSelect={this.props.onVideoSelect}\r\n                    style={{ padding: '5px' }}\r\n                />\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"ui middle aligned divided list column\">\r\n                {Titles}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VideoList;\r\n","import React from 'react';\r\nimport SearchBar from './components/SearchBar';\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport VideoList from './components/VideoList';\r\nimport axios from 'axios';\r\n\r\nconst YOUTUBE_API_KEY = `${process.env.REACT_APP_YOUTUBE_API_KEY.toString()}`; /* Replace with your own API key from the YouTube API. */\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        videos: [],\r\n        video: [],\r\n        hasError: false,\r\n        error: [],\r\n    };\r\n\r\n    // Used to update the video that has been selected\r\n    onVideoSelect = (video) => {\r\n        this.setState({\r\n            video: video,\r\n            hasError: false,\r\n        });\r\n    };\r\n\r\n    // On Search Submit used by Search Bar to propagate the VideoList\r\n    onSearchSubmit = async (term) => {\r\n        try {\r\n            const response = await axios.get(\r\n                'https://www.googleapis.com/youtube/v3/search',\r\n                {\r\n                    params: {\r\n                        key: YOUTUBE_API_KEY,\r\n                        q: term,\r\n                        type: 'video',\r\n                        part: 'snippet',\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (response.data.pageInfo.totalResults === 0) {\r\n                const error = {\r\n                    code: '204',\r\n                    message: 'No results found for: ' + term,\r\n                };\r\n                this.setState({\r\n                    hasError: true,\r\n                    error: error,\r\n                });\r\n            } else {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    video: response.data.items[0],\r\n                    videos: response.data.items,\r\n                    hasError: false,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            this.setState({\r\n                hasError: true,\r\n                error: error.response.data.error,\r\n            });\r\n        }\r\n    };\r\n\r\n    // Renders the App\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\" style={{ paddingTop: '20px' }}>\r\n                <SearchBar onSubmit={this.onSearchSubmit} />\r\n                <div\r\n                    style={{ display: 'flex' }}\r\n                    className=\"ui two column doubling grid\"\r\n                >\r\n                    <VideoPlayer\r\n                        hasError={this.state.hasError}\r\n                        error={this.state.error}\r\n                        video={this.state.video}\r\n                        className=\"column\"\r\n                    />\r\n                    <VideoList\r\n                        selectedVideo={this.state.video}\r\n                        videos={this.state.videos}\r\n                        onVideoSelect={this.onVideoSelect}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}